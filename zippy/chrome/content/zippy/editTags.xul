<?xml version="1.0"?>
<?xml-stylesheet href="chrome://global/skin/global.css" type="text/css"?>

<!-- edit tags addition to Zotero extension -->
<dialog 
  id="edit-tags" 
  title="Edit Selected Tags"
  xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
  buttons="cancel"
  buttonlabelcancel="Exit"
  ondialogcancel="return doCancel();">

    <!-- generate elements in new window -->
    <row>
    <hbox>
      <!-- tag find field and select and deselect option buttons -->
      <label value="Enter tag name:     " control="enter-tag"/>
      <textbox id="enter-tag"/>
    </hbox>
      <button label="select"
          oncommand="selectTags();"/>
      <button label="deselect"
          oncommand="deselectTags();"/>
    </row>  
    <!-- tag edit buttons in window -->
    <row>
      <button label="Delete"
          oncommand="Zotero.ZippyEditTagsWindow.EditTagsWin();"/>
      <button label="Merge"
          oncommand="enterMergeTag();"/>
      <button label="Select All"
          oncommand="selectAllTags();"/>
      <button label="Deselect All"
          oncommand="deselectAllTags();"/>
    </row>
  <!-- box for all tags -->
  <vbox>
  <groupbox id="gb">
  <richlistbox 
    id="tagsList" style="overflow: auto"  width="350" height="300">
    <listhead>
        <listheader fill="search-tags-result" label="Select Tags" hidden="false"/>
      </listhead>
      <!-- generate checkboxes for all tags -->
      <script>
        var checklist = document.getElementById('tagsList');
        for (var key in window.arguments[0]) {
          var tagadd = window.arguments[0][key]['_name'];
          var check = document.createElement('checkbox');
          check.setAttribute('label', tagadd );
          check.setAttribute('id', window.arguments[0][key]['_id'] );
          checklist.appendChild(check);
        }
      </script>
   </richlistbox>
    
  </groupbox>
   </vbox>

  <!-- tag edit functions -->
  <script>

  // Merge seleted tags
  function enterMergeTag(){
   var select = 0;
    var tags = Zotero.Tags.getAll();
    for (var tag in tags) {
        var tagadd = tags[tag]['_id'];
        var checked = document.getElementById(tagadd).checked;
        if(checked){
          select = select + 1;
        }
    }

   // Check if two tags + are selected
   if(select &lt; 2){
    var prompts = Components.classes["@mozilla.org/embedcomp/prompt-service;1"]
                        .getService(Components.interfaces.nsIPromptService);

    prompts.alert(null, "Not enough Tags Selected", "Please select two or more tags to merge.");
   }

    // CASE: Tags selected, prompt for new tag name
    else{
      var prompts = Components.classes["@mozilla.org/embedcomp/prompt-service;1"]
                          .getService(Components.interfaces.nsIPromptService);

      var check = {value: false};
      var input = {value: ""};
      var result = prompts.prompt(null, "Merge Tag", "Please enter the name of merge tag:", input, null, check);

      // Merge Tags
      if (result){
        // Correct input
        if(input.value.trim() != ""){
          Zotero.ZippyMergeTagsWindow.MergeTagsWin(input);
        }
        // No merge tag name entered
        else{
          var prompts = Components.classes["@mozilla.org/embedcomp/prompt-service;1"].getService(Components.interfaces.nsIPromptService);
          prompts.alert(null, "No Tag Name entered", "Please enter a name for the merged tag.");
        }
      }
    }
  } 


  // selectAllTags: Selects all tags by checking each tag
  function selectAllTags(){
    var tags = Zotero.Tags.getAll();
    for (var key in tags) {
      var tagadd = tags[key]['_id'];
      var checkTag = document.getElementById(tagadd).checked = true;
    }
  }


  // deselectAllTags: Deselects all tags by unchecking each tag
  function deselectAllTags(){
    var tags = Zotero.Tags.getAll();
    for (var key in tags) {
      var tagadd = tags[key]['_id'];
      var checkTag = document.getElementById(tagadd).checked = false;
    }
  }


  // selectTags: selects tag name if input tag name matches exactly
  function selectTags(){
    var newTags = Zotero.Tags.getAll();
    var inputval=document.getElementById("enter-tag").value;
    var find=false;

    for (var each in newTags) {
      if (newTags[each]['_name']==inputval) {
        var newID=newTags[each]['_id']
        find=true;
      }
    }

    if(find){
      var checkTag = document.getElementById(newID).checked = true;
    }
    else{
      var prompts = Components.classes["@mozilla.org/embedcomp/prompt-service;1"]
                          .getService(Components.interfaces.nsIPromptService);
      prompts.alert(null, "Tag Not Found", "Please enter a tag or the tag does not exist.");
    }
  }


  // deselectTags: deselects tag name if input tag name matches exactly
  function deselectTags(){
    var newTags = Zotero.Tags.getAll();
    var inputval=document.getElementById("enter-tag").value;
    var find=false;

    for (var each in newTags) {
      if (newTags[each]['_name']==inputval) {
        var newID=newTags[each]['_id']
        find=true;
      }
    }

    if(find){
      var checkTag = document.getElementById(newID).checked = false;
    }
    else{
      var prompts = Components.classes["@mozilla.org/embedcomp/prompt-service;1"]
                          .getService(Components.interfaces.nsIPromptService);
      prompts.alert(null, "Tag Not Found", "Please enter a tag or the tag does not exist.");
    }
  }

  // doCancel:
  function doCancel(){
      return true;
  }

</script>

<!-- Include the main extension logic -->
  <script src="chrome://zippy/content/include.js"/>
  <script src="chrome://zippy/content/editTags.js"/>
  <script src="chrome://zotero/content/include.js" type="application/javascript;version=1.8"/>
  <script src="chrome://zippy/content/editTagsWindow.js"/>
  <script src="chrome://zippy/content/mergeTagsWindow.js"/>
  <script src="chrome://zippy/content/searchTagsWindow.js"/>

</dialog>